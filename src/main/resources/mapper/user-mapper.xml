<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.IUserMapper">

    <!--mapper接口和映射要保持两个一致
    1.mapper接口的全类名和映射文件的namespace一致
    2.mapper接口中的方法的方法名要和映射文件的sql的id保持一致-->

    <!--<insert id="insertUser">
        insert into t_user values(null,'ikun','34924',21,'男','45890@qq.com')
    </insert>

    <update id="updateUser">
        update t_user set username="root",password="123" where id = 2
    </update>

    <delete id="deleteUser">
        delete from t_user where id = 2
    </delete>

    &lt;!&ndash;esultType:设置结果类型，即查询的数据要转换为Java类型
    resultMap:自定义映射，处理多对一或一对多的映射关系&ndash;&gt;
    <select id="getUserById" resultType="User">
        select * from t_user where id = 4
    </select>

    <select id="getAllUser" resultType="User">
        select * from t_user
    </select>-->

    <sql id="selectFields">
        id,username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <sql id="insertFields">
        username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <select id="selectById" resultType="User">
        select id,username,password,salt,email,type,status,activation_code,header_url,create_time
        from user
        where id=#{id}
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username=#{username}
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email=#{email}
    </select>

    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user(<include refid="insertFields"></include>)
        values (#{username},#{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime})
    </insert>

    <update id="updateStatus">
        update user set status=#{status} where id=#{id}
    </update>

    <update id="updateHeaderUrl">
        update user set header_url=#{headerUrl} where id=#{id}
    </update>

    <update id="updatePassword">
        update user set password=#{password} where id=#{id}
    </update>
</mapper>

